#!/bin/sh

type UserRequireRoot >/dev/null 2>&1 || \
	. "/usr/local/share/myx.common/bin/user/requireRoot"

TuneZfsQuarterCache(){
	# sysctl -n hw.physmem
	# sysctl -a | grep vfs\\.zfs | grep \\.arc_

	UserRequireRoot "TuneZfsQuarterCache"
	
	if [ "--upsert" = "$1" ] ; then
		cat > /usr/local/etc/rc.d/myx-common-zfs-quarter-cache <<- 'EOF'
			#!/bin/sh
			
			. /etc/rc.subr
			
			name="myx-common-zfs-quarter-cache"
			start_cmd="/usr/local/bin/myx.common lib/tuneZfsQuarterCache"
			stop_cmd=":"
			
			load_rc_config $name
			run_rc_command "$1"
			
		EOF
		chown root:wheel /usr/local/etc/rc.d/myx-common-zfs-quarter-cache
		chmod +x /usr/local/etc/rc.d/myx-common-zfs-quarter-cache
		sysrc 
	fi

	if [ "" = "$(sysctl -a | grep vfs.zfs.arc_max)" ] ; then
		echo "No ZFS ARC tunable detected." >&2
		return 0
	fi
	
	MEM_ALL="$( sysctl -n hw.physmem )"
	echo "physmem: $MEM_ALL" >&2
	NEW_ARC="$( echo "" | bc -e "$MEM_ALL / 4" )"
	MAX_ARC="$( sysctl -n vfs.zfs.arc_max )"
	MIN_ARC="$( sysctl -n vfs.zfs.arc_min )"
	
	if [ "$NEW_ARC" -lt "$MAX_ARC" -a "$MIN_ARC" -lt "$NEW_ARC" ] ; then
		echo "setting new arc_max, $NEW_ARC" >&2
		sysctl vfs.zfs.arc_max=$NEW_ARC
	fi
}

case "$0" in
	*/myx.common/bin/lib/tuneZfsQuarterCache) 
		if [ "--help" = "$1" ] ; then
			echo "Syntax: myx.common lib/tuneZfsQuarterCache [--upsert/--remove]" >&2
			exit 1
		fi
		set -e
		TuneZfsQuarterCache "$@"
	;;
esac
